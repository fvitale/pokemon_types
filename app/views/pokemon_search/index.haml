.container-fuid
  - if flash[:error]
    .alert.alert-warning
      %strong Warning!
      =flash[:error]
  .row
    .col-xs-2
      %h3="#{@poke.name} ##{@poke.id}"
    .col-xs-1
      = image_tag(@pokemon_image, size: "66x66", alt: "pokemon-image-#{@poke.id}")
    .col-xs-3.search-col.input-group
      = form_tag({controller: "pokemon_search", action: "search"}, method: "get")
      = autocomplete_field_tag 'pokemon[name]', '', autocomplete_pokemon_name_pokemon_search_index_path, class: "form-control search-input", placeholder: "Start typing..."
      .input-group-btn.search-input#pokemon_name_submit
        = content_tag :button, "Catch it!", type: "submit", class: "btn btn-default"
  %h5
    ="Type(s): "
    %img{id: @poke.type1}
    %img{id: @poke.type2}
  .row
    .col-xs-2
    - @damage.sort_by{|hsh|hsh[:damage]}.reverse.each_slice(9) do |sub_damage|
      .col-xs-4.attack-info
        - sub_damage.each do |d|
          - damage_class = case d[:damage]
            - when "0.00" then "zero"
            - when "0.25" then "quarter"
            - when "0.50" then "half"
            - when "1.00" then "normal"
            - when "2.00" then "double"
            - when "4.00" then "quad"
            - else "unknown"
          .row
            .col-xs-6
              Attack type
              %img{id: d[:attack]}
            .col-xs-6.generates-info
              ="generates"
              %strong.generates-value{class: damage_class}=d[:damage]
              =" damage"
